#get IH score as fraction
#z=participant id
get_IHscorefraction<- function(z){
temp_df <- subset(IHdata,participant==z)
total_IH <- nrow(temp_df)
correct_IH<- nrow(subset(temp_df,Ishi_textbox.text==correctanswer))
IHscorefraction<-paste(correct_IH,"/","16")
return(IHscorefraction)
}
IH_perperson$score_fraction<-lapply(IH_perperson$participant, get_IHscorefraction)
#Rearrange dataframe
IH_perperson$score_decimal <- as.numeric(IH_perperson$score_decimal)
IH_ordered <- IH_perperson[order(IH_perperson$score_decimal),]
#single participants
singleIHdata<-IHdata[IHdata$participant == "60ddd06d5358cdcab4a3c82c", ]
singleIHdata
IHdata$match <- IHdata$Ishi_textbox.text==IHdata$correctanswer
View(IHdata)
#make dataframe with IH scores
IH_perperson<- data.frame(unique(participants_complete$participant))
IH_perperson<-rename(IH_perperson, participant = unique.participants_complete.participant.)
#get IH score as decimal
#z=participant id
get_IHscoredecimal<- function(z){
temp_df <- subset(IHdata,participant==z)
total_IH <- nrow(temp_df)
correct_IH<- nrow(subset(temp_df,Ishi_textbox.text==correctanswer))
IHscoredecimal<-format(round(correct_IH/total_IH, 2), nsmall = 2)
IHscoredecimal<-as.numeric(IHscoredecimal)
return(IHscoredecimal)
}
IH_perperson$score_decimal<-lapply(IH_perperson$participant, get_IHscoredecimal)
#get IH score as fraction
#z=participant id
get_IHscorefraction<- function(z){
temp_df <- subset(IHdata,participant==z)
total_IH <- nrow(temp_df)
correct_IH<- nrow(subset(temp_df,Ishi_textbox.text==correctanswer))
IHscorefraction<-paste(correct_IH,"/","16")
return(IHscorefraction)
}
IH_perperson$score_fraction<-lapply(IH_perperson$participant, get_IHscorefraction)
#Rearrange dataframe
IH_perperson$score_decimal <- as.numeric(IH_perperson$score_decimal)
IH_ordered <- IH_perperson[order(IH_perperson$score_decimal),]
#single participants
singleIHdata<-IHdata[IHdata$participant == "60ddd06d5358cdcab4a3c82c", ]
singleIHdata
#single participants
singleIHdata<-IHdata[IHdata$participant == "5ec3eefc909cda09ed268192", ]
singleIHdata
#get IH score as fraction
#z=participant id
get_IHscorefraction<- function(z){
temp_df <- subset(IHdata,participant==z)
total_IH <- nrow(temp_df)
correct_IH<- nrow(subset(temp_df,Ishi_textbox.text==correctanswer))
IHscorefraction<-paste(correct_IH,"/",total_IH,"/", "16")
return(IHscorefraction)
}
IH_perperson$score_fraction<-lapply(IH_perperson$participant, get_IHscorefraction)
#Rearrange dataframe
IH_perperson$score_decimal <- as.numeric(IH_perperson$score_decimal)
IH_ordered <- IH_perperson[order(IH_perperson$score_decimal),]
return(correct_IH, total_IH, IHscorefraction)
return(total_IH)
get_IHtotal_answered<- function(z){
temp_df <- subset(IHdata,participant==z)
total_IH <- nrow(temp_df)
return(total_IH)
}
IH_perperson$total_answered<-lapply(IH_perperson$participant, get_IHtotal_answered)
IH_ordered <- IH_perperson[order(IH_perperson$total_answered),]
IH_perperson$total_answered <- as.numeric(IH_perperson$total_answered)
esquisse:::esquisser()
table(IH_perperson)
table(IH_perperson$total_answered)
esquisse:::esquisser()
View(pass_correlation)
#make dataframe with IH scores
IH_perperson<- data.frame(unique(participants_complete$participant))
IH_perperson<-rename(IH_perperson, participant = unique.participants_complete.participant.)
#get IH score as fraction
#z=participant id
get_IHscorefraction<- function(z){
temp_df <- subset(IHdata,participant==z)
total_IH <- nrow(temp_df)
correct_IH<- nrow(subset(temp_df,Ishi_textbox.text==correctanswer))
IHscorefraction<-paste(correct_IH,"/",total_IH,"/", "16")
return(IHscorefraction)
}
IH_perperson$score_fraction<-lapply(IH_perperson$participant, get_IHscorefraction)
get_IHtotal_answered<- function(z){
temp_df <- subset(IHdata,participant==z)
total_IH <- nrow(temp_df)
return(total_IH)
}
IH_perperson$total_answered<-lapply(IH_perperson$participant, get_IHtotal_answered)
IH_perperson$total_answered <- as.numeric(IH_perperson$total_answered)
#Rearrange dataframe
IH_perperson$score_decimal <- as.numeric(IH_perperson$score_decimal)
IH_ordered <- IH_perperson[order(IH_perperson$total_answered),]
IH_perperson$score <- as.numeric(IH_perperson$score_fraction)
sapply(IH_perperson$score_fraction, function(x) eval(parse(text=x)))
IH_perperson$decimal <- sapply(IH_perperson$score_fraction, function(x) eval(parse(text=x)))
esquisse:::esquisser()
#block annoying warnings when loading libraries
shhh <- suppressPackageStartupMessages
{library(tidyr)
library(plyr)
library(dplyr) %>% shhh
library(ggplot2)
library(gridExtra) %>% shhh
library(MASS) %>% shhh
library(Matrix) %>% shhh
library(reshape2)%>% shhh
library(ape) %>% shhh # stats
library(vegan) %>% shhh # stats
library(RColorBrewer)
library(cocor)
library(DescTools) %>% shhh
library(reshape2)
library(grid)
library(ggplotify)
library(ggpubr) %>% shhh
library(ggthemes)
library(stringr)
library(rgl)
library(tidyverse)
library(plot.matrix) %>% shhh
library(farver)
library(matrixStats) %>% shhh
library(plotrix) %>% shhh
library(JWileymisc)}
setwd("~/thesis/colas_analysis")
{
## Pilot data with Ishihara
#make a list of data file names
pilot.files <- list.files(path="./data/Pilot data", pattern="*.csv", full.names=TRUE)
#make a dataframe binding all datafiles
pilot.data <- sapply(pilot.files, read.csv, simplify=FALSE) %>% bind_rows(.id = "fileId")
#adding Ishihara colomn missing to allow rbind
pilot.data$Ishi_textbox.text <- NA
##Data with Ishihara test
#make a list of data file names
files <- list.files(path="./data", pattern="*.csv", full.names=TRUE)
#make a dataframe binding all datafiles
data <- sapply(files, read.csv, simplify=FALSE) %>%
lapply(\(x) mutate(x, across(Ishi_textbox.text, as.character))) %>% bind_rows(.id = "fileId")
##Data with Ishihara test
#make a list of data file names
pb.files <- list.files(path="./data/Problematic file", pattern="*.csv", full.names=TRUE)
#make a dataframe binding all datafiles
pb.data <- sapply(pb.files, read.csv, simplify=FALSE) %>%
lapply(\(x) mutate(x, across(Ishi_textbox.text, as.character))) %>% bind_rows(.id = "fileId")
pb.data$textbox.text <- as.character(pb.data$textbox.text)
data <- bind_rows(pb.data, data, pilot.data)
}
library(readxl)
setwd("~/thesis/colas_analysis")
View(data)
IH_vars<- c("participant", "Ishi_textbox.text", "Ishi_trial_keyresp.rt", "imageaddress")
#make catch data frame
IHdata<-data[IH_vars]
#remove empty cells
IHdata <- IHdata %>% drop_na()
#Scoring reference
scoringtable<- read_excel("PictureConditions.xlsx")
#inserting correct answers to participants dataframe
IHdata <- merge(IHdata, scoringtable, by= "imageaddress")
IHdata$match <- IHdata$Ishi_textbox.text==IHdata$correctanswer
IH_perperson<- data.frame(unique(participants_complete$participant))
IH_perperson<- data.frame(unique(IHdata$participant))
IH_perperson<-rename(IH_perperson, participant = unique.participants_complete.participant.)
View(IH_perperson)
IH_perperson<-rename(IH_perperson, participant = unique.IHdata.participant.)
get_IHtotal_answered<- function(z){
temp_df <- subset(IHdata,participant==z)
total_IH <- nrow(temp_df)
return(total_IH)
}
IH_perperson$total_answered<-lapply(IH_perperson$participant, get_IHtotal_answered)
IH_perperson$total_answered <- as.numeric(IH_perperson$total_answered)
View(IHdata)
return(rt_IH)
get_IHrt <-function(r){
temp_df <- subset(IHdata, participant ==r)
rt_IH <- mean(temp_df$Ishi_trial_keyresp.rt)
return(rt_IH)
}
IH_perperson$mean.rt <- lapply(IH_perperson, get_IHrt)
temp_df <- subset(IHdata, participant =="6084673eddceee020a6881c4")
rt_IH <- mean(temp_df$Ishi_trial_keyresp.rt)
get_IHrt <-function(r){
temp_df <- subset(IHdata, participant == r)
rt_IH <- mean(temp_df$Ishi_trial_keyresp.rt)
return(rt_IH)
}
IH_perperson$mean.rt <- lapply(IH_perperson, get_IHrt)
temp_df <- subset(IHdata, participant == z)
get_IHrt <-function(z){
temp_df <- subset(IHdata, participant == z)
rt_IH <- mean(temp_df$Ishi_trial_keyresp.rt)
return(rt_IH)
}
IH_perperson$mean.rt <- lapply(IH_perperson, get_IHrt)
View(IHdata)
IHdata <- subset(IHdata, select =-(24 plate number, Hoffman menozzi))
IHdata <- subset(IHdata, select =-("24 plate number", "Hoffman menozzi"))
IHdata <- subset(IHdata, select =-("24 plate number": "Hoffman menozzi"))
IHdata <- subset(IHdata, select =-(24 plate number: Hoffman menozzi))
IHdata <- subset(IHdata, select =-c("24 plate number", "Hoffman menozzi"))
IHdata <- subset(IHdata, select =-c(24 plate number, Hoffman menozzi))
IHdata <- subset(IHdata, select =-c(24 plate number: Hoffman menozzi))
IHdata %>% select(-24 plate number)
IHdata %>% select(-`Hoffman menozzi`)
IHdata %>% select(-Hoffman menozzi)
IHdata %>% select(-starts_with('Hoff'))
IHdata %>% select(-starts_with('Ho'))
IHdata %>% select(-starts_with('24'))
IHdata %>% select(-7, -8)
IHdata$`Hoffman menozzi` <- NULL
IHdata$`24 plate number`<- NULL
get_IHrt <-function(z){
temp_df <- subset(IHdata, participant == z)
rt_IH <- mean(temp_df$Ishi_trial_keyresp.rt)
return(rt_IH)
}
IH_perperson$mean.rt <- lapply(IH_perperson, get_IHrt)
View(temp_df)
temp_df <- subset(catchdata,participant=="6084673eddceee020a6881c4")
#MAKE CATCHDATA DATAFRAME WITH ONE ROW PER CATCH TRIAL, FOR ALL PARTICIPANTS
{
#select catch variables for analysis
catch_vars<- c("participant", "catchnumber", "catchresponse", "response_time_catch")
#make catch data frame
catchdata<-data[data$Catch==1, catch_vars]
#remove empty cells
catchdata <- catchdata %>% drop_na()
#format response time
catchdata$response_time_catch<-as.numeric(catchdata$response_time_catch) #for graphing later
}
#make dataframe with catch scores and mean response times
catch_perperson<- data.frame(unique(catchdata$participant))
catch_perperson<-rename(catch_perperson, participant = unique.catchdata.participant.)
#make dataframe with catch scores and mean response times
catch_perperson<- data.frame(unique(catchdata$participant))
catch_perperson<-rename(catch_perperson, participant = unique.catchdata.participant.)
#get catch score as decimal
#z=participant id
get_catchscoredecimal<- function(z){
temp_df <- subset(catchdata,participant==z)
total_catch <- nrow(temp_df)
correct_catch<- nrow(subset(temp_df,catchnumber==catchresponse))
catchscoredecimal<-format(round(correct_catch/total_catch, 2), nsmall = 2)
catchscoredecimal<-as.numeric(catchscoredecimal)
return(catchscoredecimal)
}
catch_perperson$score_decimal<-lapply(catch_perperson$participant, get_catchscoredecimal)
#get catch score as fraction
#z=participant id
get_catchscorefraction<- function(z){
temp_df <- subset(catchdata,participant==z)
total_catch <- nrow(temp_df)
correct_catch<- nrow(subset(temp_df,catchnumber==catchresponse))
catchscorefraction<-paste(correct_catch,"/",total_catch)
return(catchscorefraction)
}
#get mean catch response times
#z=participant id
get_catchresponsetime<- function(z){
temp_df <- subset(catchdata,participant==z)
catchresponsetime<-mean(temp_df$response_time_catch)
return(catchresponsetime)
}
catch_perperson$response_time<-lapply(catch_perperson$participant, get_catchresponsetime)
View(catch_perperson)
get_IHrt <-function(z){
temp_df <- subset(IHdata, participant == z)
rt_IH <- mean(temp_df$Ishi_trial_keyresp.rt)
return(rt_IH)
}
IH_perperson$mean.rt <- lapply(IH_perperson, get_IHrt)
View(get_catchresponsetime)
View(get_IHrt)
View(IH_perperson)
#get IH correctly answered
get_IHcorrectQs<- function(z){
temp_df <- subset(IHdata,participant==z)
correct_IH<- nrow(subset(temp_df,Ishi_textbox.text==correctanswer))
return(correct_IH)
}
IH_perperson$correctA<-lapply(IH_perperson$participant, get_IHcorrectQs)
#get IH score as decimal, not sure that's useful
#z=participant id
get_IHscoredecimal<- function(z){
temp_df <- subset(IHdata,participant==z)
total_IH <- nrow(temp_df)
correct_IH<- nrow(subset(temp_df,Ishi_textbox.text==correctanswer))
IHscoredecimal<-format(round(correct_IH/total_IH, 2), nsmall = 2)
IHscoredecimal<-as.numeric(IHscoredecimal)
return(IHscoredecimal)
}
IH_perperson$score_decimal<-lapply(IH_perperson$participant, get_IHscoredecimal)
IH_perperson$correctA <- as.numeric(IH_perperson$correctA)
temp_df <- subset(IHdata,participant=="6081342ebd43daf29472c5e6")
View(temp_df)
#Survey dataframe
#select catch variables for analysis
survey_vars<- c("participant", "textbox.text", "textbox_2.text", "textbox_3.text", "textbox_4.text", "textbox_5.text", "textbox_6.text")
surveydata<-data[, survey_vars]
#remove empty cells
surveydata <- surveydata %>% drop_na()
View(surveydata)
#rename answers to make some sense
surveydata %>% rename(location.diffi=textbox.text)
#rename answers to make some sense
surveydata <- surveydata %>% rename(location.diffi=textbox.text)
#rename answers to make some sense
surveydata <- surveydata %>% rename(location.diffi=textbox.text,
colour.diff= textbox_2.text,
normal.acuity= textbox_3.text,
colour.vision= textbox_4.text,
answer.strategy = textbox_5.text,
serious.check = textbox_6.text)
surveydata<-data[, survey_vars]
#rename answers to make some sense
surveydata <- surveydata %>% rename(location.diffi=textbox.text,
colour.diff= textbox_2.text,
normal.acuity= textbox_3.text,
colour.vision= textbox_4.text,
answer.strategy = textbox_5.text,
serious.check = textbox_6.text)
#single participants
singleIHdata<-IHdata[IHdata$participant == "5d596938a0c0940001a47291", ]
View(singleIHdata)
IH_perperson$correctA <- as.numeric(IH_perperson$correctA)
#single participants
singleIHdata<-IHdata[IHdata$participant == "6131de3102b54b21bccdc7f7", ]
esquisse:::esquisser()
class(catchdata)
class(IHdata)
View(IHdata)
#get average response time
get_IHrt<- function(z){
temp_df <- subset(IHdata,participant==z)
rt_IH<-mean(temp_df$Ishi_trial_keyresp.rt)
return(rt_IH)
}
IH_perperson$mean.rt <- lapply(IH_perperson, get_IHrt)
IH_perperson$mean.rt <- lapply(IH_perperson$participant, get_IHrt)
esquisse:::esquisser()
esquisse:::esquisser()
View(IH_perperson)
IH_perperson$mean.rt <- as.numeric((IH_perperson$mean.rt))
esquisse:::esquisser()
View(IHdata)
nrow(IHdata$match==FALSE)
nrow(IHdata$match==TRUE)
esquisse:::esquisser()
View(data)
esquisse:::esquisser()
#Survey dataframe
#select catch variables for analysis
survey_vars<- c("participant", "textbox.text", "textbox_2.text", "textbox_3.text", "textbox_4.text", "textbox_5.text", "textbox_6.text", "textbox_7.text")
#make catch data frame
surveydata<-data[, survey_vars]
#rename answers to make some sense
surveydata <- surveydata %>% rename(location.diffi=textbox.text,
colour.diff= textbox_2.text,
normal.acuity= textbox_3.text,
colour.vision= textbox_4.text,
answer.strategy = textbox_5.text,
serious.check = textbox_6.text)
#remove empty cells
surveydata <- surveydata %>% drop_na()
View(surveydata)
View(IHdata)
IHdata$correctanswer <- as.character(IHdata$correctanswer)
IHdata$Ishi_textbox.text <- as.numeric(IHdata$Ishi_textbox.text)
IHdata$match <- IHdata$Ishi_textbox.text==IHdata$correctanswer
#get IH correctly answered
get_IHcorrectQs<- function(z){
temp_df <- subset(IHdata,participant==z)
correct_IH<- nrow(subset(temp_df,match==TRUE))
return(correct_IH)
}
IH_perperson$correctA<-lapply(IH_perperson$participant, get_IHcorrectQs)
IH_perperson$correctA <- as.numeric(IH_perperson$correctA)
View(IH_perperson)
View(data)
#Distribution of IH scores
ggplot(IH_perperson, aes(correctA)) +
geom_histogram() +
scale_x_continuous(breaks = as.numeric(round(quantile(IH_perperson$correctA),digits = 2))) +
theme_pubr() +
theme(axis.line = element_blank())+
geom_rangeframe()+
labs(x="Ishihara score",
title= "Histogram of Ishihara score",
subtitle = paste("median=", median(IH_perperson$correctA)))
#READ FILES
{
## Pilot data with Ishihara
#make a list of data file names
pilot.files <- list.files(path="./data/Pilot data", pattern="*.csv", full.names=TRUE)
#make a dataframe binding all datafiles
pilot.data <- sapply(pilot.files, read.csv, simplify=FALSE) %>% bind_rows(.id = "fileId")
#adding Ishihara colomn missing to allow rbind
pilot.data$Ishi_textbox.text <- NA
##Data with Ishihara test
#make a list of data file names
files <- list.files(path="./data", pattern="*.csv", full.names=TRUE)
#make a dataframe binding all datafiles
data <- sapply(files, read.csv, simplify=FALSE) %>%
lapply(\(x) mutate(x, across(Ishi_textbox.text, as.character))) %>% bind_rows(.id = "fileId")
##Data with Ishihara test
#make a list of data file names
pb.files <- list.files(path="./data/Problematic file", pattern="*.csv", full.names=TRUE)
#make a dataframe binding all datafiles
pb.data <- sapply(pb.files, read.csv, simplify=FALSE) %>%
lapply(\(x) mutate(x, across(Ishi_textbox.text, as.character))) %>% bind_rows(.id = "fileId")
pb.data$textbox.text <- as.character(pb.data$textbox.text)
data <- bind_rows(pb.data, data, pilot.data)
}
#single participants
singleIHdata<-IHdata[IHdata$participant == "61716a16c157db249e36fc46", ]
View(singleIHdata)
IH_perperson <- subset(IH_person,!participant == "61716a16c157db249e36fc46")
IH_perperson <- subset(IH_perperson,!participant == "61716a16c157db249e36fc46")
#Distribution of IH scores
ggplot(IH_perperson, aes(correctA)) +
geom_histogram() +
scale_x_continuous(breaks = as.numeric(round(quantile(IH_perperson$correctA),digits = 2))) +
theme_pubr() +
theme(axis.line = element_blank())+
geom_rangeframe()+
labs(x="Ishihara score",
title= "Histogram of Ishihara score")
#Distribution of IH scores
ggplot(IH_perperson, aes(correctA)) +
geom_histogram(fill= rainbow(20)) +
scale_x_continuous(breaks = as.numeric(round(quantile(IH_perperson$correctA),digits = 2))) +
theme_pubr() +
theme(axis.line = element_blank())+
geom_rangeframe()+
labs(x="Ishihara score",
title= "Histogram of Ishihara score")
#Distribution of IH scores
ggplot(IH_perperson, aes(correctA)) +
geom_histogram(fill= rainbow(30)) +
scale_x_continuous(breaks = as.numeric(round(quantile(IH_perperson$correctA),digits = 2))) +
theme_pubr() +
theme(axis.line = element_blank())+
geom_rangeframe()+
labs(x="Ishihara score",
title= "Histogram of Ishihara score")
#Distribution of IH scores
ggplot(IH_perperson, aes(correctA)) +
geom_histogram(bin= 20,fill= rainbow(30)) +
scale_x_continuous(breaks = as.numeric(round(quantile(IH_perperson$correctA),digits = 2))) +
theme_pubr() +
theme(axis.line = element_blank())+
geom_rangeframe()+
labs(x="Ishihara score",
title= "Histogram of Ishihara score")
#Distribution of IH scores
ggplot(IH_perperson, aes(correctA)) +
geom_histogram(binwidth = 20,fill= rainbow(30)) +
scale_x_continuous(breaks = as.numeric(round(quantile(IH_perperson$correctA),digits = 2))) +
theme_pubr() +
theme(axis.line = element_blank())+
geom_rangeframe()+
labs(x="Ishihara score",
title= "Histogram of Ishihara score")
#Distribution of IH scores
ggplot(IH_perperson, aes(correctA)) +
geom_histogram(binwidth = 20,fill= rainbow(20)) +
scale_x_continuous(breaks = as.numeric(round(quantile(IH_perperson$correctA),digits = 2))) +
theme_pubr() +
theme(axis.line = element_blank())+
geom_rangeframe()+
labs(x="Ishihara score",
title= "Histogram of Ishihara score")
#Distribution of IH scores
ggplot(IH_perperson, aes(correctA)) +
geom_histogram(binwidth = 20) +
scale_x_continuous(breaks = as.numeric(round(quantile(IH_perperson$correctA),digits = 2))) +
theme_pubr() +
theme(axis.line = element_blank())+
geom_rangeframe()+
labs(x="Ishihara score",
title= "Histogram of Ishihara score")
#Distribution of IH scores
ggplot(IH_perperson, aes(correctA)) +
geom_histogram(binwidth = 30) +
scale_x_continuous(breaks = as.numeric(round(quantile(IH_perperson$correctA),digits = 2))) +
theme_pubr() +
theme(axis.line = element_blank())+
geom_rangeframe()+
labs(x="Ishihara score",
title= "Histogram of Ishihara score")
#Distribution of IH scores
ggplot(IH_perperson, aes(correctA)) +
geom_histogram() +
scale_x_continuous(breaks = as.numeric(round(quantile(IH_perperson$correctA),digits = 2))) +
theme_pubr() +
theme(axis.line = element_blank())+
geom_rangeframe()+
labs(x="Ishihara score",
title= "Histogram of Ishihara score")
head(singleIHdata)
